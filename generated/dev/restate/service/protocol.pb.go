// Copyright (c) 2023 - Restate Software, Inc., Restate GmbH
//
// This file is part of the Restate service protocol, which is
// released under the MIT license.
//
// You can find a copy of the license in file LICENSE in the root
// directory of this repository or package, or at
// https://github.com/restatedev/service-protocol/blob/main/LICENSE

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: dev/restate/service/protocol.proto

package service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Service protocol version.
type ServiceProtocolVersion int32

const (
	ServiceProtocolVersion_SERVICE_PROTOCOL_VERSION_UNSPECIFIED ServiceProtocolVersion = 0
	// initial service protocol version
	ServiceProtocolVersion_V1 ServiceProtocolVersion = 1
)

// Enum value maps for ServiceProtocolVersion.
var (
	ServiceProtocolVersion_name = map[int32]string{
		0: "SERVICE_PROTOCOL_VERSION_UNSPECIFIED",
		1: "V1",
	}
	ServiceProtocolVersion_value = map[string]int32{
		"SERVICE_PROTOCOL_VERSION_UNSPECIFIED": 0,
		"V1":                                   1,
	}
)

func (x ServiceProtocolVersion) Enum() *ServiceProtocolVersion {
	p := new(ServiceProtocolVersion)
	*p = x
	return p
}

func (x ServiceProtocolVersion) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServiceProtocolVersion) Descriptor() protoreflect.EnumDescriptor {
	return file_dev_restate_service_protocol_proto_enumTypes[0].Descriptor()
}

func (ServiceProtocolVersion) Type() protoreflect.EnumType {
	return &file_dev_restate_service_protocol_proto_enumTypes[0]
}

func (x ServiceProtocolVersion) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServiceProtocolVersion.Descriptor instead.
func (ServiceProtocolVersion) EnumDescriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{0}
}

// Type: 0x0000 + 0
type StartMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique id of the invocation. This id is unique across invocations and won't change when replaying the journal.
	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Invocation id that can be used for logging.
	// The user can use this id to address this invocation in admin and status introspection apis.
	DebugId      string `protobuf:"bytes,2,opt,name=debug_id,json=debugId,proto3" json:"debug_id,omitempty"`
	KnownEntries uint32 `protobuf:"varint,3,opt,name=known_entries,json=knownEntries,proto3" json:"known_entries,omitempty"`
	// protolint:disable:next REPEATED_FIELD_NAMES_PLURALIZED
	StateMap     []*StartMessage_StateEntry `protobuf:"bytes,4,rep,name=state_map,json=stateMap,proto3" json:"state_map,omitempty"`
	PartialState bool                       `protobuf:"varint,5,opt,name=partial_state,json=partialState,proto3" json:"partial_state,omitempty"`
	// If this invocation has a key associated (e.g. for objects and workflows), then this key is filled in. Empty otherwise.
	Key string `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *StartMessage) Reset() {
	*x = StartMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMessage) ProtoMessage() {}

func (x *StartMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMessage.ProtoReflect.Descriptor instead.
func (*StartMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{0}
}

func (x *StartMessage) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *StartMessage) GetDebugId() string {
	if x != nil {
		return x.DebugId
	}
	return ""
}

func (x *StartMessage) GetKnownEntries() uint32 {
	if x != nil {
		return x.KnownEntries
	}
	return 0
}

func (x *StartMessage) GetStateMap() []*StartMessage_StateEntry {
	if x != nil {
		return x.StateMap
	}
	return nil
}

func (x *StartMessage) GetPartialState() bool {
	if x != nil {
		return x.PartialState
	}
	return false
}

func (x *StartMessage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// Type: 0x0000 + 1
type CompletionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryIndex uint32 `protobuf:"varint,1,opt,name=entry_index,json=entryIndex,proto3" json:"entry_index,omitempty"`
	// Types that are assignable to Result:
	//
	//	*CompletionMessage_Empty
	//	*CompletionMessage_Value
	//	*CompletionMessage_Failure
	Result isCompletionMessage_Result `protobuf_oneof:"result"`
}

func (x *CompletionMessage) Reset() {
	*x = CompletionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletionMessage) ProtoMessage() {}

func (x *CompletionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletionMessage.ProtoReflect.Descriptor instead.
func (*CompletionMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{1}
}

func (x *CompletionMessage) GetEntryIndex() uint32 {
	if x != nil {
		return x.EntryIndex
	}
	return 0
}

func (m *CompletionMessage) GetResult() isCompletionMessage_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CompletionMessage) GetEmpty() *Empty {
	if x, ok := x.GetResult().(*CompletionMessage_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *CompletionMessage) GetValue() []byte {
	if x, ok := x.GetResult().(*CompletionMessage_Value); ok {
		return x.Value
	}
	return nil
}

func (x *CompletionMessage) GetFailure() *Failure {
	if x, ok := x.GetResult().(*CompletionMessage_Failure); ok {
		return x.Failure
	}
	return nil
}

type isCompletionMessage_Result interface {
	isCompletionMessage_Result()
}

type CompletionMessage_Empty struct {
	Empty *Empty `protobuf:"bytes,13,opt,name=empty,proto3,oneof"`
}

type CompletionMessage_Value struct {
	Value []byte `protobuf:"bytes,14,opt,name=value,proto3,oneof"`
}

type CompletionMessage_Failure struct {
	Failure *Failure `protobuf:"bytes,15,opt,name=failure,proto3,oneof"`
}

func (*CompletionMessage_Empty) isCompletionMessage_Result() {}

func (*CompletionMessage_Value) isCompletionMessage_Result() {}

func (*CompletionMessage_Failure) isCompletionMessage_Result() {}

// Type: 0x0000 + 2
// Implementations MUST send this message when suspending an invocation.
type SuspensionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This list represents any of the entry_index the invocation is waiting on to progress.
	// The runtime will resume the invocation as soon as one of the given entry_index is completed.
	// This list MUST not be empty.
	// False positive, entry_indexes is a valid plural of entry_indices.
	// https://learn.microsoft.com/en-us/style-guide/a-z-word-list-term-collections/i/index-indexes-indices
	EntryIndexes []uint32 `protobuf:"varint,1,rep,packed,name=entry_indexes,json=entryIndexes,proto3" json:"entry_indexes,omitempty"` // protolint:disable:this REPEATED_FIELD_NAMES_PLURALIZED
}

func (x *SuspensionMessage) Reset() {
	*x = SuspensionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuspensionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuspensionMessage) ProtoMessage() {}

func (x *SuspensionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuspensionMessage.ProtoReflect.Descriptor instead.
func (*SuspensionMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{2}
}

func (x *SuspensionMessage) GetEntryIndexes() []uint32 {
	if x != nil {
		return x.EntryIndexes
	}
	return nil
}

// Type: 0x0000 + 3
type ErrorMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The code can be any HTTP status code, as described https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml.
	// In addition, we define the following error codes that MAY be used by the SDK for better error reporting:
	// * JOURNAL_MISMATCH = 570, that is when the SDK cannot replay a journal due to the mismatch between the journal and the actual code.
	// * PROTOCOL_VIOLATION = 571, that is when the SDK receives an unexpected message or an expected message variant, given its state.
	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Contains a concise error message, e.g. Throwable#getMessage() in Java.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Contains a verbose error description, e.g. the exception stacktrace.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Entry that caused the failure. This may be outside the current stored journal size.
	// If no specific entry caused the failure, the current replayed/processed entry can be used.
	RelatedEntryIndex *uint32 `protobuf:"varint,4,opt,name=related_entry_index,json=relatedEntryIndex,proto3,oneof" json:"related_entry_index,omitempty"`
	// Name of the entry that caused the failure.
	RelatedEntryName *string `protobuf:"bytes,5,opt,name=related_entry_name,json=relatedEntryName,proto3,oneof" json:"related_entry_name,omitempty"`
	// Entry type.
	RelatedEntryType *uint32 `protobuf:"varint,6,opt,name=related_entry_type,json=relatedEntryType,proto3,oneof" json:"related_entry_type,omitempty"`
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{3}
}

func (x *ErrorMessage) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ErrorMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ErrorMessage) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ErrorMessage) GetRelatedEntryIndex() uint32 {
	if x != nil && x.RelatedEntryIndex != nil {
		return *x.RelatedEntryIndex
	}
	return 0
}

func (x *ErrorMessage) GetRelatedEntryName() string {
	if x != nil && x.RelatedEntryName != nil {
		return *x.RelatedEntryName
	}
	return ""
}

func (x *ErrorMessage) GetRelatedEntryType() uint32 {
	if x != nil && x.RelatedEntryType != nil {
		return *x.RelatedEntryType
	}
	return 0
}

// Type: 0x0000 + 4
type EntryAckMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryIndex uint32 `protobuf:"varint,1,opt,name=entry_index,json=entryIndex,proto3" json:"entry_index,omitempty"`
}

func (x *EntryAckMessage) Reset() {
	*x = EntryAckMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntryAckMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntryAckMessage) ProtoMessage() {}

func (x *EntryAckMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntryAckMessage.ProtoReflect.Descriptor instead.
func (*EntryAckMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{4}
}

func (x *EntryAckMessage) GetEntryIndex() uint32 {
	if x != nil {
		return x.EntryIndex
	}
	return 0
}

// Type: 0x0000 + 5
// Implementations MUST send this message when the invocation lifecycle ends.
type EndMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EndMessage) Reset() {
	*x = EndMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndMessage) ProtoMessage() {}

func (x *EndMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndMessage.ProtoReflect.Descriptor instead.
func (*EndMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{5}
}

// Completable: No
// Fallible: No
// Type: 0x0400 + 0
type InputEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Headers []*Header `protobuf:"bytes,1,rep,name=headers,proto3" json:"headers,omitempty"`
	Value   []byte    `protobuf:"bytes,14,opt,name=value,proto3" json:"value,omitempty"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *InputEntryMessage) Reset() {
	*x = InputEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputEntryMessage) ProtoMessage() {}

func (x *InputEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputEntryMessage.ProtoReflect.Descriptor instead.
func (*InputEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{6}
}

func (x *InputEntryMessage) GetHeaders() []*Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *InputEntryMessage) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *InputEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Completable: No
// Fallible: No
// Type: 0x0400 + 1
type OutputEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*OutputEntryMessage_Value
	//	*OutputEntryMessage_Failure
	Result isOutputEntryMessage_Result `protobuf_oneof:"result"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *OutputEntryMessage) Reset() {
	*x = OutputEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OutputEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputEntryMessage) ProtoMessage() {}

func (x *OutputEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputEntryMessage.ProtoReflect.Descriptor instead.
func (*OutputEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{7}
}

func (m *OutputEntryMessage) GetResult() isOutputEntryMessage_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *OutputEntryMessage) GetValue() []byte {
	if x, ok := x.GetResult().(*OutputEntryMessage_Value); ok {
		return x.Value
	}
	return nil
}

func (x *OutputEntryMessage) GetFailure() *Failure {
	if x, ok := x.GetResult().(*OutputEntryMessage_Failure); ok {
		return x.Failure
	}
	return nil
}

func (x *OutputEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type isOutputEntryMessage_Result interface {
	isOutputEntryMessage_Result()
}

type OutputEntryMessage_Value struct {
	Value []byte `protobuf:"bytes,14,opt,name=value,proto3,oneof"`
}

type OutputEntryMessage_Failure struct {
	Failure *Failure `protobuf:"bytes,15,opt,name=failure,proto3,oneof"`
}

func (*OutputEntryMessage_Value) isOutputEntryMessage_Result() {}

func (*OutputEntryMessage_Failure) isOutputEntryMessage_Result() {}

// Completable: Yes
// Fallible: No
// Type: 0x0800 + 0
type GetStateEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are assignable to Result:
	//
	//	*GetStateEntryMessage_Empty
	//	*GetStateEntryMessage_Value
	//	*GetStateEntryMessage_Failure
	Result isGetStateEntryMessage_Result `protobuf_oneof:"result"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetStateEntryMessage) Reset() {
	*x = GetStateEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateEntryMessage) ProtoMessage() {}

func (x *GetStateEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateEntryMessage.ProtoReflect.Descriptor instead.
func (*GetStateEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{8}
}

func (x *GetStateEntryMessage) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (m *GetStateEntryMessage) GetResult() isGetStateEntryMessage_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetStateEntryMessage) GetEmpty() *Empty {
	if x, ok := x.GetResult().(*GetStateEntryMessage_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *GetStateEntryMessage) GetValue() []byte {
	if x, ok := x.GetResult().(*GetStateEntryMessage_Value); ok {
		return x.Value
	}
	return nil
}

func (x *GetStateEntryMessage) GetFailure() *Failure {
	if x, ok := x.GetResult().(*GetStateEntryMessage_Failure); ok {
		return x.Failure
	}
	return nil
}

func (x *GetStateEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type isGetStateEntryMessage_Result interface {
	isGetStateEntryMessage_Result()
}

type GetStateEntryMessage_Empty struct {
	Empty *Empty `protobuf:"bytes,13,opt,name=empty,proto3,oneof"`
}

type GetStateEntryMessage_Value struct {
	Value []byte `protobuf:"bytes,14,opt,name=value,proto3,oneof"`
}

type GetStateEntryMessage_Failure struct {
	Failure *Failure `protobuf:"bytes,15,opt,name=failure,proto3,oneof"`
}

func (*GetStateEntryMessage_Empty) isGetStateEntryMessage_Result() {}

func (*GetStateEntryMessage_Value) isGetStateEntryMessage_Result() {}

func (*GetStateEntryMessage_Failure) isGetStateEntryMessage_Result() {}

// Completable: No
// Fallible: No
// Type: 0x0800 + 1
type SetStateEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SetStateEntryMessage) Reset() {
	*x = SetStateEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetStateEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetStateEntryMessage) ProtoMessage() {}

func (x *SetStateEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetStateEntryMessage.ProtoReflect.Descriptor instead.
func (*SetStateEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{9}
}

func (x *SetStateEntryMessage) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *SetStateEntryMessage) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SetStateEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Completable: No
// Fallible: No
// Type: 0x0800 + 2
type ClearStateEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ClearStateEntryMessage) Reset() {
	*x = ClearStateEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearStateEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearStateEntryMessage) ProtoMessage() {}

func (x *ClearStateEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearStateEntryMessage.ProtoReflect.Descriptor instead.
func (*ClearStateEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{10}
}

func (x *ClearStateEntryMessage) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *ClearStateEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Completable: No
// Fallible: No
// Type: 0x0800 + 3
type ClearAllStateEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *ClearAllStateEntryMessage) Reset() {
	*x = ClearAllStateEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClearAllStateEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClearAllStateEntryMessage) ProtoMessage() {}

func (x *ClearAllStateEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClearAllStateEntryMessage.ProtoReflect.Descriptor instead.
func (*ClearAllStateEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{11}
}

func (x *ClearAllStateEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Completable: Yes
// Fallible: No
// Type: 0x0800 + 4
type GetStateKeysEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*GetStateKeysEntryMessage_Value
	//	*GetStateKeysEntryMessage_Failure
	Result isGetStateKeysEntryMessage_Result `protobuf_oneof:"result"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetStateKeysEntryMessage) Reset() {
	*x = GetStateKeysEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateKeysEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateKeysEntryMessage) ProtoMessage() {}

func (x *GetStateKeysEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateKeysEntryMessage.ProtoReflect.Descriptor instead.
func (*GetStateKeysEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{12}
}

func (m *GetStateKeysEntryMessage) GetResult() isGetStateKeysEntryMessage_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetStateKeysEntryMessage) GetValue() *GetStateKeysEntryMessage_StateKeys {
	if x, ok := x.GetResult().(*GetStateKeysEntryMessage_Value); ok {
		return x.Value
	}
	return nil
}

func (x *GetStateKeysEntryMessage) GetFailure() *Failure {
	if x, ok := x.GetResult().(*GetStateKeysEntryMessage_Failure); ok {
		return x.Failure
	}
	return nil
}

func (x *GetStateKeysEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type isGetStateKeysEntryMessage_Result interface {
	isGetStateKeysEntryMessage_Result()
}

type GetStateKeysEntryMessage_Value struct {
	Value *GetStateKeysEntryMessage_StateKeys `protobuf:"bytes,14,opt,name=value,proto3,oneof"`
}

type GetStateKeysEntryMessage_Failure struct {
	Failure *Failure `protobuf:"bytes,15,opt,name=failure,proto3,oneof"`
}

func (*GetStateKeysEntryMessage_Value) isGetStateKeysEntryMessage_Result() {}

func (*GetStateKeysEntryMessage_Failure) isGetStateKeysEntryMessage_Result() {}

// Completable: Yes
// Fallible: No
// Type: 0x0800 + 8
type GetPromiseEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are assignable to Result:
	//
	//	*GetPromiseEntryMessage_Value
	//	*GetPromiseEntryMessage_Failure
	Result isGetPromiseEntryMessage_Result `protobuf_oneof:"result"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetPromiseEntryMessage) Reset() {
	*x = GetPromiseEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromiseEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromiseEntryMessage) ProtoMessage() {}

func (x *GetPromiseEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromiseEntryMessage.ProtoReflect.Descriptor instead.
func (*GetPromiseEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{13}
}

func (x *GetPromiseEntryMessage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (m *GetPromiseEntryMessage) GetResult() isGetPromiseEntryMessage_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *GetPromiseEntryMessage) GetValue() []byte {
	if x, ok := x.GetResult().(*GetPromiseEntryMessage_Value); ok {
		return x.Value
	}
	return nil
}

func (x *GetPromiseEntryMessage) GetFailure() *Failure {
	if x, ok := x.GetResult().(*GetPromiseEntryMessage_Failure); ok {
		return x.Failure
	}
	return nil
}

func (x *GetPromiseEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type isGetPromiseEntryMessage_Result interface {
	isGetPromiseEntryMessage_Result()
}

type GetPromiseEntryMessage_Value struct {
	Value []byte `protobuf:"bytes,14,opt,name=value,proto3,oneof"`
}

type GetPromiseEntryMessage_Failure struct {
	Failure *Failure `protobuf:"bytes,15,opt,name=failure,proto3,oneof"`
}

func (*GetPromiseEntryMessage_Value) isGetPromiseEntryMessage_Result() {}

func (*GetPromiseEntryMessage_Failure) isGetPromiseEntryMessage_Result() {}

// Completable: Yes
// Fallible: No
// Type: 0x0800 + 9
type PeekPromiseEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are assignable to Result:
	//
	//	*PeekPromiseEntryMessage_Empty
	//	*PeekPromiseEntryMessage_Value
	//	*PeekPromiseEntryMessage_Failure
	Result isPeekPromiseEntryMessage_Result `protobuf_oneof:"result"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PeekPromiseEntryMessage) Reset() {
	*x = PeekPromiseEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeekPromiseEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeekPromiseEntryMessage) ProtoMessage() {}

func (x *PeekPromiseEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeekPromiseEntryMessage.ProtoReflect.Descriptor instead.
func (*PeekPromiseEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{14}
}

func (x *PeekPromiseEntryMessage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (m *PeekPromiseEntryMessage) GetResult() isPeekPromiseEntryMessage_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *PeekPromiseEntryMessage) GetEmpty() *Empty {
	if x, ok := x.GetResult().(*PeekPromiseEntryMessage_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *PeekPromiseEntryMessage) GetValue() []byte {
	if x, ok := x.GetResult().(*PeekPromiseEntryMessage_Value); ok {
		return x.Value
	}
	return nil
}

func (x *PeekPromiseEntryMessage) GetFailure() *Failure {
	if x, ok := x.GetResult().(*PeekPromiseEntryMessage_Failure); ok {
		return x.Failure
	}
	return nil
}

func (x *PeekPromiseEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type isPeekPromiseEntryMessage_Result interface {
	isPeekPromiseEntryMessage_Result()
}

type PeekPromiseEntryMessage_Empty struct {
	Empty *Empty `protobuf:"bytes,13,opt,name=empty,proto3,oneof"`
}

type PeekPromiseEntryMessage_Value struct {
	Value []byte `protobuf:"bytes,14,opt,name=value,proto3,oneof"`
}

type PeekPromiseEntryMessage_Failure struct {
	Failure *Failure `protobuf:"bytes,15,opt,name=failure,proto3,oneof"`
}

func (*PeekPromiseEntryMessage_Empty) isPeekPromiseEntryMessage_Result() {}

func (*PeekPromiseEntryMessage_Value) isPeekPromiseEntryMessage_Result() {}

func (*PeekPromiseEntryMessage_Failure) isPeekPromiseEntryMessage_Result() {}

// Completable: Yes
// Fallible: No
// Type: 0x0800 + A
type CompletePromiseEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// The value to use to complete the promise
	//
	// Types that are assignable to Completion:
	//
	//	*CompletePromiseEntryMessage_CompletionValue
	//	*CompletePromiseEntryMessage_CompletionFailure
	Completion isCompletePromiseEntryMessage_Completion `protobuf_oneof:"completion"`
	// Types that are assignable to Result:
	//
	//	*CompletePromiseEntryMessage_Empty
	//	*CompletePromiseEntryMessage_Failure
	Result isCompletePromiseEntryMessage_Result `protobuf_oneof:"result"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompletePromiseEntryMessage) Reset() {
	*x = CompletePromiseEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompletePromiseEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompletePromiseEntryMessage) ProtoMessage() {}

func (x *CompletePromiseEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompletePromiseEntryMessage.ProtoReflect.Descriptor instead.
func (*CompletePromiseEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{15}
}

func (x *CompletePromiseEntryMessage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (m *CompletePromiseEntryMessage) GetCompletion() isCompletePromiseEntryMessage_Completion {
	if m != nil {
		return m.Completion
	}
	return nil
}

func (x *CompletePromiseEntryMessage) GetCompletionValue() []byte {
	if x, ok := x.GetCompletion().(*CompletePromiseEntryMessage_CompletionValue); ok {
		return x.CompletionValue
	}
	return nil
}

func (x *CompletePromiseEntryMessage) GetCompletionFailure() *Failure {
	if x, ok := x.GetCompletion().(*CompletePromiseEntryMessage_CompletionFailure); ok {
		return x.CompletionFailure
	}
	return nil
}

func (m *CompletePromiseEntryMessage) GetResult() isCompletePromiseEntryMessage_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CompletePromiseEntryMessage) GetEmpty() *Empty {
	if x, ok := x.GetResult().(*CompletePromiseEntryMessage_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *CompletePromiseEntryMessage) GetFailure() *Failure {
	if x, ok := x.GetResult().(*CompletePromiseEntryMessage_Failure); ok {
		return x.Failure
	}
	return nil
}

func (x *CompletePromiseEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type isCompletePromiseEntryMessage_Completion interface {
	isCompletePromiseEntryMessage_Completion()
}

type CompletePromiseEntryMessage_CompletionValue struct {
	CompletionValue []byte `protobuf:"bytes,2,opt,name=completion_value,json=completionValue,proto3,oneof"`
}

type CompletePromiseEntryMessage_CompletionFailure struct {
	CompletionFailure *Failure `protobuf:"bytes,3,opt,name=completion_failure,json=completionFailure,proto3,oneof"`
}

func (*CompletePromiseEntryMessage_CompletionValue) isCompletePromiseEntryMessage_Completion() {}

func (*CompletePromiseEntryMessage_CompletionFailure) isCompletePromiseEntryMessage_Completion() {}

type isCompletePromiseEntryMessage_Result interface {
	isCompletePromiseEntryMessage_Result()
}

type CompletePromiseEntryMessage_Empty struct {
	// Returns empty if value was set successfully
	Empty *Empty `protobuf:"bytes,13,opt,name=empty,proto3,oneof"`
}

type CompletePromiseEntryMessage_Failure struct {
	// Returns a failure if the promise was already completed
	Failure *Failure `protobuf:"bytes,15,opt,name=failure,proto3,oneof"`
}

func (*CompletePromiseEntryMessage_Empty) isCompletePromiseEntryMessage_Result() {}

func (*CompletePromiseEntryMessage_Failure) isCompletePromiseEntryMessage_Result() {}

// Completable: Yes
// Fallible: No
// Type: 0x0C00 + 0
type SleepEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Wake up time.
	// The time is set as duration since UNIX Epoch.
	WakeUpTime uint64 `protobuf:"varint,1,opt,name=wake_up_time,json=wakeUpTime,proto3" json:"wake_up_time,omitempty"`
	// Types that are assignable to Result:
	//
	//	*SleepEntryMessage_Empty
	//	*SleepEntryMessage_Failure
	Result isSleepEntryMessage_Result `protobuf_oneof:"result"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SleepEntryMessage) Reset() {
	*x = SleepEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SleepEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SleepEntryMessage) ProtoMessage() {}

func (x *SleepEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SleepEntryMessage.ProtoReflect.Descriptor instead.
func (*SleepEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{16}
}

func (x *SleepEntryMessage) GetWakeUpTime() uint64 {
	if x != nil {
		return x.WakeUpTime
	}
	return 0
}

func (m *SleepEntryMessage) GetResult() isSleepEntryMessage_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *SleepEntryMessage) GetEmpty() *Empty {
	if x, ok := x.GetResult().(*SleepEntryMessage_Empty); ok {
		return x.Empty
	}
	return nil
}

func (x *SleepEntryMessage) GetFailure() *Failure {
	if x, ok := x.GetResult().(*SleepEntryMessage_Failure); ok {
		return x.Failure
	}
	return nil
}

func (x *SleepEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type isSleepEntryMessage_Result interface {
	isSleepEntryMessage_Result()
}

type SleepEntryMessage_Empty struct {
	Empty *Empty `protobuf:"bytes,13,opt,name=empty,proto3,oneof"`
}

type SleepEntryMessage_Failure struct {
	Failure *Failure `protobuf:"bytes,15,opt,name=failure,proto3,oneof"`
}

func (*SleepEntryMessage_Empty) isSleepEntryMessage_Result() {}

func (*SleepEntryMessage_Failure) isSleepEntryMessage_Result() {}

// Completable: Yes
// Fallible: Yes
// Type: 0x0C00 + 1
type CallEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string    `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	HandlerName string    `protobuf:"bytes,2,opt,name=handler_name,json=handlerName,proto3" json:"handler_name,omitempty"`
	Parameter   []byte    `protobuf:"bytes,3,opt,name=parameter,proto3" json:"parameter,omitempty"`
	Headers     []*Header `protobuf:"bytes,4,rep,name=headers,proto3" json:"headers,omitempty"`
	// If this invocation has a key associated (e.g. for objects and workflows), then this key is filled in. Empty otherwise.
	Key string `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	// Types that are assignable to Result:
	//
	//	*CallEntryMessage_Value
	//	*CallEntryMessage_Failure
	Result isCallEntryMessage_Result `protobuf_oneof:"result"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CallEntryMessage) Reset() {
	*x = CallEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CallEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CallEntryMessage) ProtoMessage() {}

func (x *CallEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CallEntryMessage.ProtoReflect.Descriptor instead.
func (*CallEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{17}
}

func (x *CallEntryMessage) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *CallEntryMessage) GetHandlerName() string {
	if x != nil {
		return x.HandlerName
	}
	return ""
}

func (x *CallEntryMessage) GetParameter() []byte {
	if x != nil {
		return x.Parameter
	}
	return nil
}

func (x *CallEntryMessage) GetHeaders() []*Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *CallEntryMessage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (m *CallEntryMessage) GetResult() isCallEntryMessage_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CallEntryMessage) GetValue() []byte {
	if x, ok := x.GetResult().(*CallEntryMessage_Value); ok {
		return x.Value
	}
	return nil
}

func (x *CallEntryMessage) GetFailure() *Failure {
	if x, ok := x.GetResult().(*CallEntryMessage_Failure); ok {
		return x.Failure
	}
	return nil
}

func (x *CallEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type isCallEntryMessage_Result interface {
	isCallEntryMessage_Result()
}

type CallEntryMessage_Value struct {
	Value []byte `protobuf:"bytes,14,opt,name=value,proto3,oneof"`
}

type CallEntryMessage_Failure struct {
	Failure *Failure `protobuf:"bytes,15,opt,name=failure,proto3,oneof"`
}

func (*CallEntryMessage_Value) isCallEntryMessage_Result() {}

func (*CallEntryMessage_Failure) isCallEntryMessage_Result() {}

// Completable: No
// Fallible: Yes
// Type: 0x0C00 + 2
type OneWayCallEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServiceName string `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	HandlerName string `protobuf:"bytes,2,opt,name=handler_name,json=handlerName,proto3" json:"handler_name,omitempty"`
	Parameter   []byte `protobuf:"bytes,3,opt,name=parameter,proto3" json:"parameter,omitempty"`
	// Time when this BackgroundInvoke should be executed.
	// The time is set as duration since UNIX Epoch.
	// If this value is not set, equal to 0, or past in time,
	// the runtime will execute this BackgroundInvoke as soon as possible.
	InvokeTime uint64    `protobuf:"varint,4,opt,name=invoke_time,json=invokeTime,proto3" json:"invoke_time,omitempty"`
	Headers    []*Header `protobuf:"bytes,5,rep,name=headers,proto3" json:"headers,omitempty"`
	// If this invocation has a key associated (e.g. for objects and workflows), then this key is filled in. Empty otherwise.
	Key string `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *OneWayCallEntryMessage) Reset() {
	*x = OneWayCallEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OneWayCallEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OneWayCallEntryMessage) ProtoMessage() {}

func (x *OneWayCallEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OneWayCallEntryMessage.ProtoReflect.Descriptor instead.
func (*OneWayCallEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{18}
}

func (x *OneWayCallEntryMessage) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

func (x *OneWayCallEntryMessage) GetHandlerName() string {
	if x != nil {
		return x.HandlerName
	}
	return ""
}

func (x *OneWayCallEntryMessage) GetParameter() []byte {
	if x != nil {
		return x.Parameter
	}
	return nil
}

func (x *OneWayCallEntryMessage) GetInvokeTime() uint64 {
	if x != nil {
		return x.InvokeTime
	}
	return 0
}

func (x *OneWayCallEntryMessage) GetHeaders() []*Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *OneWayCallEntryMessage) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *OneWayCallEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Completable: Yes
// Fallible: No
// Type: 0x0C00 + 3
// Awakeables are addressed by an identifier exposed to the user. See the spec for more details.
type AwakeableEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*AwakeableEntryMessage_Value
	//	*AwakeableEntryMessage_Failure
	Result isAwakeableEntryMessage_Result `protobuf_oneof:"result"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *AwakeableEntryMessage) Reset() {
	*x = AwakeableEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AwakeableEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AwakeableEntryMessage) ProtoMessage() {}

func (x *AwakeableEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AwakeableEntryMessage.ProtoReflect.Descriptor instead.
func (*AwakeableEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{19}
}

func (m *AwakeableEntryMessage) GetResult() isAwakeableEntryMessage_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *AwakeableEntryMessage) GetValue() []byte {
	if x, ok := x.GetResult().(*AwakeableEntryMessage_Value); ok {
		return x.Value
	}
	return nil
}

func (x *AwakeableEntryMessage) GetFailure() *Failure {
	if x, ok := x.GetResult().(*AwakeableEntryMessage_Failure); ok {
		return x.Failure
	}
	return nil
}

func (x *AwakeableEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type isAwakeableEntryMessage_Result interface {
	isAwakeableEntryMessage_Result()
}

type AwakeableEntryMessage_Value struct {
	Value []byte `protobuf:"bytes,14,opt,name=value,proto3,oneof"`
}

type AwakeableEntryMessage_Failure struct {
	Failure *Failure `protobuf:"bytes,15,opt,name=failure,proto3,oneof"`
}

func (*AwakeableEntryMessage_Value) isAwakeableEntryMessage_Result() {}

func (*AwakeableEntryMessage_Failure) isAwakeableEntryMessage_Result() {}

// Completable: No
// Fallible: Yes
// Type: 0x0C00 + 4
type CompleteAwakeableEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Identifier of the awakeable. See the spec for more details.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Types that are assignable to Result:
	//
	//	*CompleteAwakeableEntryMessage_Value
	//	*CompleteAwakeableEntryMessage_Failure
	Result isCompleteAwakeableEntryMessage_Result `protobuf_oneof:"result"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CompleteAwakeableEntryMessage) Reset() {
	*x = CompleteAwakeableEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompleteAwakeableEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompleteAwakeableEntryMessage) ProtoMessage() {}

func (x *CompleteAwakeableEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompleteAwakeableEntryMessage.ProtoReflect.Descriptor instead.
func (*CompleteAwakeableEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{20}
}

func (x *CompleteAwakeableEntryMessage) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (m *CompleteAwakeableEntryMessage) GetResult() isCompleteAwakeableEntryMessage_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *CompleteAwakeableEntryMessage) GetValue() []byte {
	if x, ok := x.GetResult().(*CompleteAwakeableEntryMessage_Value); ok {
		return x.Value
	}
	return nil
}

func (x *CompleteAwakeableEntryMessage) GetFailure() *Failure {
	if x, ok := x.GetResult().(*CompleteAwakeableEntryMessage_Failure); ok {
		return x.Failure
	}
	return nil
}

func (x *CompleteAwakeableEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type isCompleteAwakeableEntryMessage_Result interface {
	isCompleteAwakeableEntryMessage_Result()
}

type CompleteAwakeableEntryMessage_Value struct {
	Value []byte `protobuf:"bytes,14,opt,name=value,proto3,oneof"`
}

type CompleteAwakeableEntryMessage_Failure struct {
	Failure *Failure `protobuf:"bytes,15,opt,name=failure,proto3,oneof"`
}

func (*CompleteAwakeableEntryMessage_Value) isCompleteAwakeableEntryMessage_Result() {}

func (*CompleteAwakeableEntryMessage_Failure) isCompleteAwakeableEntryMessage_Result() {}

// Completable: No
// Fallible: No
// Type: 0x0C00 + 5
// Flag: RequiresRuntimeAck
type RunEntryMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//
	//	*RunEntryMessage_Value
	//	*RunEntryMessage_Failure
	Result isRunEntryMessage_Result `protobuf_oneof:"result"`
	// Entry name
	Name string `protobuf:"bytes,12,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *RunEntryMessage) Reset() {
	*x = RunEntryMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunEntryMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunEntryMessage) ProtoMessage() {}

func (x *RunEntryMessage) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunEntryMessage.ProtoReflect.Descriptor instead.
func (*RunEntryMessage) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{21}
}

func (m *RunEntryMessage) GetResult() isRunEntryMessage_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *RunEntryMessage) GetValue() []byte {
	if x, ok := x.GetResult().(*RunEntryMessage_Value); ok {
		return x.Value
	}
	return nil
}

func (x *RunEntryMessage) GetFailure() *Failure {
	if x, ok := x.GetResult().(*RunEntryMessage_Failure); ok {
		return x.Failure
	}
	return nil
}

func (x *RunEntryMessage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type isRunEntryMessage_Result interface {
	isRunEntryMessage_Result()
}

type RunEntryMessage_Value struct {
	Value []byte `protobuf:"bytes,14,opt,name=value,proto3,oneof"`
}

type RunEntryMessage_Failure struct {
	Failure *Failure `protobuf:"bytes,15,opt,name=failure,proto3,oneof"`
}

func (*RunEntryMessage_Value) isRunEntryMessage_Result() {}

func (*RunEntryMessage_Failure) isRunEntryMessage_Result() {}

// This failure object carries user visible errors,
// e.g. invocation failure return value or failure result of an InvokeEntryMessage.
type Failure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The code can be any HTTP status code, as described https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml.
	Code uint32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Contains a concise error message, e.g. Throwable#getMessage() in Java.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Failure) Reset() {
	*x = Failure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Failure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Failure) ProtoMessage() {}

func (x *Failure) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Failure.ProtoReflect.Descriptor instead.
func (*Failure) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{22}
}

func (x *Failure) GetCode() uint32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *Failure) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{23}
}

func (x *Header) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Header) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{24}
}

type StartMessage_StateEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key []byte `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// If value is an empty byte array,
	// then it means the value is empty and not "missing" (e.g. empty string).
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *StartMessage_StateEntry) Reset() {
	*x = StartMessage_StateEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartMessage_StateEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartMessage_StateEntry) ProtoMessage() {}

func (x *StartMessage_StateEntry) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartMessage_StateEntry.ProtoReflect.Descriptor instead.
func (*StartMessage_StateEntry) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{0, 0}
}

func (x *StartMessage_StateEntry) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *StartMessage_StateEntry) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type GetStateKeysEntryMessage_StateKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Keys [][]byte `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
}

func (x *GetStateKeysEntryMessage_StateKeys) Reset() {
	*x = GetStateKeysEntryMessage_StateKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dev_restate_service_protocol_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStateKeysEntryMessage_StateKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStateKeysEntryMessage_StateKeys) ProtoMessage() {}

func (x *GetStateKeysEntryMessage_StateKeys) ProtoReflect() protoreflect.Message {
	mi := &file_dev_restate_service_protocol_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStateKeysEntryMessage_StateKeys.ProtoReflect.Descriptor instead.
func (*GetStateKeysEntryMessage_StateKeys) Descriptor() ([]byte, []int) {
	return file_dev_restate_service_protocol_proto_rawDescGZIP(), []int{12, 0}
}

func (x *GetStateKeysEntryMessage_StateKeys) GetKeys() [][]byte {
	if x != nil {
		return x.Keys
	}
	return nil
}

var File_dev_restate_service_protocol_proto protoreflect.FileDescriptor

var file_dev_restate_service_protocol_proto_rawDesc = []byte{
	0x0a, 0x22, 0x64, 0x65, 0x76, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x22, 0x9f, 0x02, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x62, 0x75, 0x67, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x69, 0x65, 0x73, 0x12, 0x52, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x70,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x61, 0x72, 0x74, 0x69,
	0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x34,
	0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3b, 0x0a, 0x05, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x76,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48,
	0x00, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x41, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x38, 0x0a,
	0x11, 0x53, 0x75, 0x73, 0x70, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x72, 0x79,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0xbf, 0x02, 0x0a, 0x0c, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x13, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x11, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a,
	0x12, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x72, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x31, 0x0a, 0x12, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x10,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x88, 0x01, 0x01, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x22, 0x32, 0x0a, 0x0f, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x41, 0x63, 0x6b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x65, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x0c, 0x0a,
	0x0a, 0x45, 0x6e, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x7d, 0x0a, 0x11, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3e, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8d, 0x01, 0x0a, 0x12, 0x4f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c,
	0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x76,
	0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xde, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0c, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65,
	0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x52, 0x0a, 0x14, 0x53,
	0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x3e, 0x0a, 0x16, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x2f, 0x0a, 0x19, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0xf6, 0x01, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x58, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x48, 0x00,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48,
	0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x1f,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b,
	0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x42,
	0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x41,
	0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0xe1, 0x01, 0x0a, 0x17, 0x50, 0x65, 0x65, 0x6b, 0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x3b, 0x0a,
	0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0xe0, 0x02, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x50, 0x72, 0x6f, 0x6d, 0x69, 0x73, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2b, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x56, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x3b, 0x0a, 0x05, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x01,
	0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48,
	0x01, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd3, 0x01, 0x0a, 0x11, 0x53, 0x6c, 0x65, 0x65, 0x70,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0c,
	0x77, 0x61, 0x6b, 0x65, 0x5f, 0x75, 0x70, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x77, 0x61, 0x6b, 0x65, 0x55, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b,
	0x0a, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x41, 0x0a, 0x07, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64,
	0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xc1, 0x02, 0x0a,
	0x10, 0x43, 0x61, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x61, 0x6e, 0x64,
	0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x41, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e,
	0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x83, 0x02, 0x0a, 0x16, 0x4f, 0x6e, 0x65, 0x57, 0x61, 0x79, 0x43, 0x61, 0x6c, 0x6c, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x3e, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x15, 0x41, 0x77, 0x61, 0x6b, 0x65,
	0x61, 0x62, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x16, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x48,
	0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x2e,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xa8, 0x01, 0x0a, 0x1d, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x77, 0x61, 0x6b, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x8a, 0x01, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x41, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x2e, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x48, 0x00, 0x52, 0x07, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x37, 0x0a, 0x07, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x30, 0x0a, 0x06, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x07, 0x0a, 0x05,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x2a, 0x4a, 0x0a, 0x16, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x24, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x54, 0x4f,
	0x43, 0x4f, 0x4c, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x56, 0x31, 0x10,
	0x01, 0x42, 0x81, 0x02, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x65, 0x76, 0x2e, 0x72, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x42, 0x0d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x3a, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x64, 0x65, 0x76, 0x2f, 0x73,
	0x64, 0x6b, 0x2d, 0x67, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2f,
	0x64, 0x65, 0x76, 0x2f, 0x72, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0xa2, 0x02, 0x04, 0x44, 0x52, 0x53, 0x50, 0xaa, 0x02, 0x1c, 0x44, 0x65, 0x76,
	0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0xca, 0x02, 0x1c, 0x44, 0x65, 0x76, 0x5c,
	0x52, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0xe2, 0x02, 0x28, 0x44, 0x65, 0x76, 0x5c, 0x52,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0xea, 0x02, 0x1f, 0x44, 0x65, 0x76, 0x3a, 0x3a, 0x52, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x3a, 0x3a, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x3a, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dev_restate_service_protocol_proto_rawDescOnce sync.Once
	file_dev_restate_service_protocol_proto_rawDescData = file_dev_restate_service_protocol_proto_rawDesc
)

func file_dev_restate_service_protocol_proto_rawDescGZIP() []byte {
	file_dev_restate_service_protocol_proto_rawDescOnce.Do(func() {
		file_dev_restate_service_protocol_proto_rawDescData = protoimpl.X.CompressGZIP(file_dev_restate_service_protocol_proto_rawDescData)
	})
	return file_dev_restate_service_protocol_proto_rawDescData
}

var file_dev_restate_service_protocol_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_dev_restate_service_protocol_proto_msgTypes = make([]protoimpl.MessageInfo, 27)
var file_dev_restate_service_protocol_proto_goTypes = []any{
	(ServiceProtocolVersion)(0),                // 0: dev.restate.service.protocol.ServiceProtocolVersion
	(*StartMessage)(nil),                       // 1: dev.restate.service.protocol.StartMessage
	(*CompletionMessage)(nil),                  // 2: dev.restate.service.protocol.CompletionMessage
	(*SuspensionMessage)(nil),                  // 3: dev.restate.service.protocol.SuspensionMessage
	(*ErrorMessage)(nil),                       // 4: dev.restate.service.protocol.ErrorMessage
	(*EntryAckMessage)(nil),                    // 5: dev.restate.service.protocol.EntryAckMessage
	(*EndMessage)(nil),                         // 6: dev.restate.service.protocol.EndMessage
	(*InputEntryMessage)(nil),                  // 7: dev.restate.service.protocol.InputEntryMessage
	(*OutputEntryMessage)(nil),                 // 8: dev.restate.service.protocol.OutputEntryMessage
	(*GetStateEntryMessage)(nil),               // 9: dev.restate.service.protocol.GetStateEntryMessage
	(*SetStateEntryMessage)(nil),               // 10: dev.restate.service.protocol.SetStateEntryMessage
	(*ClearStateEntryMessage)(nil),             // 11: dev.restate.service.protocol.ClearStateEntryMessage
	(*ClearAllStateEntryMessage)(nil),          // 12: dev.restate.service.protocol.ClearAllStateEntryMessage
	(*GetStateKeysEntryMessage)(nil),           // 13: dev.restate.service.protocol.GetStateKeysEntryMessage
	(*GetPromiseEntryMessage)(nil),             // 14: dev.restate.service.protocol.GetPromiseEntryMessage
	(*PeekPromiseEntryMessage)(nil),            // 15: dev.restate.service.protocol.PeekPromiseEntryMessage
	(*CompletePromiseEntryMessage)(nil),        // 16: dev.restate.service.protocol.CompletePromiseEntryMessage
	(*SleepEntryMessage)(nil),                  // 17: dev.restate.service.protocol.SleepEntryMessage
	(*CallEntryMessage)(nil),                   // 18: dev.restate.service.protocol.CallEntryMessage
	(*OneWayCallEntryMessage)(nil),             // 19: dev.restate.service.protocol.OneWayCallEntryMessage
	(*AwakeableEntryMessage)(nil),              // 20: dev.restate.service.protocol.AwakeableEntryMessage
	(*CompleteAwakeableEntryMessage)(nil),      // 21: dev.restate.service.protocol.CompleteAwakeableEntryMessage
	(*RunEntryMessage)(nil),                    // 22: dev.restate.service.protocol.RunEntryMessage
	(*Failure)(nil),                            // 23: dev.restate.service.protocol.Failure
	(*Header)(nil),                             // 24: dev.restate.service.protocol.Header
	(*Empty)(nil),                              // 25: dev.restate.service.protocol.Empty
	(*StartMessage_StateEntry)(nil),            // 26: dev.restate.service.protocol.StartMessage.StateEntry
	(*GetStateKeysEntryMessage_StateKeys)(nil), // 27: dev.restate.service.protocol.GetStateKeysEntryMessage.StateKeys
}
var file_dev_restate_service_protocol_proto_depIdxs = []int32{
	26, // 0: dev.restate.service.protocol.StartMessage.state_map:type_name -> dev.restate.service.protocol.StartMessage.StateEntry
	25, // 1: dev.restate.service.protocol.CompletionMessage.empty:type_name -> dev.restate.service.protocol.Empty
	23, // 2: dev.restate.service.protocol.CompletionMessage.failure:type_name -> dev.restate.service.protocol.Failure
	24, // 3: dev.restate.service.protocol.InputEntryMessage.headers:type_name -> dev.restate.service.protocol.Header
	23, // 4: dev.restate.service.protocol.OutputEntryMessage.failure:type_name -> dev.restate.service.protocol.Failure
	25, // 5: dev.restate.service.protocol.GetStateEntryMessage.empty:type_name -> dev.restate.service.protocol.Empty
	23, // 6: dev.restate.service.protocol.GetStateEntryMessage.failure:type_name -> dev.restate.service.protocol.Failure
	27, // 7: dev.restate.service.protocol.GetStateKeysEntryMessage.value:type_name -> dev.restate.service.protocol.GetStateKeysEntryMessage.StateKeys
	23, // 8: dev.restate.service.protocol.GetStateKeysEntryMessage.failure:type_name -> dev.restate.service.protocol.Failure
	23, // 9: dev.restate.service.protocol.GetPromiseEntryMessage.failure:type_name -> dev.restate.service.protocol.Failure
	25, // 10: dev.restate.service.protocol.PeekPromiseEntryMessage.empty:type_name -> dev.restate.service.protocol.Empty
	23, // 11: dev.restate.service.protocol.PeekPromiseEntryMessage.failure:type_name -> dev.restate.service.protocol.Failure
	23, // 12: dev.restate.service.protocol.CompletePromiseEntryMessage.completion_failure:type_name -> dev.restate.service.protocol.Failure
	25, // 13: dev.restate.service.protocol.CompletePromiseEntryMessage.empty:type_name -> dev.restate.service.protocol.Empty
	23, // 14: dev.restate.service.protocol.CompletePromiseEntryMessage.failure:type_name -> dev.restate.service.protocol.Failure
	25, // 15: dev.restate.service.protocol.SleepEntryMessage.empty:type_name -> dev.restate.service.protocol.Empty
	23, // 16: dev.restate.service.protocol.SleepEntryMessage.failure:type_name -> dev.restate.service.protocol.Failure
	24, // 17: dev.restate.service.protocol.CallEntryMessage.headers:type_name -> dev.restate.service.protocol.Header
	23, // 18: dev.restate.service.protocol.CallEntryMessage.failure:type_name -> dev.restate.service.protocol.Failure
	24, // 19: dev.restate.service.protocol.OneWayCallEntryMessage.headers:type_name -> dev.restate.service.protocol.Header
	23, // 20: dev.restate.service.protocol.AwakeableEntryMessage.failure:type_name -> dev.restate.service.protocol.Failure
	23, // 21: dev.restate.service.protocol.CompleteAwakeableEntryMessage.failure:type_name -> dev.restate.service.protocol.Failure
	23, // 22: dev.restate.service.protocol.RunEntryMessage.failure:type_name -> dev.restate.service.protocol.Failure
	23, // [23:23] is the sub-list for method output_type
	23, // [23:23] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_dev_restate_service_protocol_proto_init() }
func file_dev_restate_service_protocol_proto_init() {
	if File_dev_restate_service_protocol_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_dev_restate_service_protocol_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*StartMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CompletionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*SuspensionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*ErrorMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*EntryAckMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*EndMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*InputEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*OutputEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetStateEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*SetStateEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ClearStateEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ClearAllStateEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*GetStateKeysEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*GetPromiseEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*PeekPromiseEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*CompletePromiseEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*SleepEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*CallEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*OneWayCallEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*AwakeableEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*CompleteAwakeableEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*RunEntryMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*Failure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*StartMessage_StateEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dev_restate_service_protocol_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*GetStateKeysEntryMessage_StateKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_dev_restate_service_protocol_proto_msgTypes[1].OneofWrappers = []any{
		(*CompletionMessage_Empty)(nil),
		(*CompletionMessage_Value)(nil),
		(*CompletionMessage_Failure)(nil),
	}
	file_dev_restate_service_protocol_proto_msgTypes[3].OneofWrappers = []any{}
	file_dev_restate_service_protocol_proto_msgTypes[7].OneofWrappers = []any{
		(*OutputEntryMessage_Value)(nil),
		(*OutputEntryMessage_Failure)(nil),
	}
	file_dev_restate_service_protocol_proto_msgTypes[8].OneofWrappers = []any{
		(*GetStateEntryMessage_Empty)(nil),
		(*GetStateEntryMessage_Value)(nil),
		(*GetStateEntryMessage_Failure)(nil),
	}
	file_dev_restate_service_protocol_proto_msgTypes[12].OneofWrappers = []any{
		(*GetStateKeysEntryMessage_Value)(nil),
		(*GetStateKeysEntryMessage_Failure)(nil),
	}
	file_dev_restate_service_protocol_proto_msgTypes[13].OneofWrappers = []any{
		(*GetPromiseEntryMessage_Value)(nil),
		(*GetPromiseEntryMessage_Failure)(nil),
	}
	file_dev_restate_service_protocol_proto_msgTypes[14].OneofWrappers = []any{
		(*PeekPromiseEntryMessage_Empty)(nil),
		(*PeekPromiseEntryMessage_Value)(nil),
		(*PeekPromiseEntryMessage_Failure)(nil),
	}
	file_dev_restate_service_protocol_proto_msgTypes[15].OneofWrappers = []any{
		(*CompletePromiseEntryMessage_CompletionValue)(nil),
		(*CompletePromiseEntryMessage_CompletionFailure)(nil),
		(*CompletePromiseEntryMessage_Empty)(nil),
		(*CompletePromiseEntryMessage_Failure)(nil),
	}
	file_dev_restate_service_protocol_proto_msgTypes[16].OneofWrappers = []any{
		(*SleepEntryMessage_Empty)(nil),
		(*SleepEntryMessage_Failure)(nil),
	}
	file_dev_restate_service_protocol_proto_msgTypes[17].OneofWrappers = []any{
		(*CallEntryMessage_Value)(nil),
		(*CallEntryMessage_Failure)(nil),
	}
	file_dev_restate_service_protocol_proto_msgTypes[19].OneofWrappers = []any{
		(*AwakeableEntryMessage_Value)(nil),
		(*AwakeableEntryMessage_Failure)(nil),
	}
	file_dev_restate_service_protocol_proto_msgTypes[20].OneofWrappers = []any{
		(*CompleteAwakeableEntryMessage_Value)(nil),
		(*CompleteAwakeableEntryMessage_Failure)(nil),
	}
	file_dev_restate_service_protocol_proto_msgTypes[21].OneofWrappers = []any{
		(*RunEntryMessage_Value)(nil),
		(*RunEntryMessage_Failure)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dev_restate_service_protocol_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   27,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_dev_restate_service_protocol_proto_goTypes,
		DependencyIndexes: file_dev_restate_service_protocol_proto_depIdxs,
		EnumInfos:         file_dev_restate_service_protocol_proto_enumTypes,
		MessageInfos:      file_dev_restate_service_protocol_proto_msgTypes,
	}.Build()
	File_dev_restate_service_protocol_proto = out.File
	file_dev_restate_service_protocol_proto_rawDesc = nil
	file_dev_restate_service_protocol_proto_goTypes = nil
	file_dev_restate_service_protocol_proto_depIdxs = nil
}
